version: "3"

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./etc/nginx:/etc/nginx/conf.d
      - static_volume:/app/var/www/static:rw
    networks:
      - main
    depends_on:
      - web

  web:
    build: .
    env_file: $PWD/.env
    restart: always
    command: /bin/sh -c "gunicorn drf_mtg_card_crawler.wsgi:application --config file:drf_mtg_card_crawler/gunicorn.py"
    expose:
      - "8000"
    volumes:
      - static_volume:/app/var/www/static:rw
    networks:
      - main
    depends_on:
      - rabbitmq
      - postgres

  worker_general:
    build: .
    env_file: $PWD/.env
    restart: always
    command: /bin/sh -c "celery -A drf_mtg_card_crawler.celery worker --loglevel=INFO --concurrency=1 -Q general-${CELERY_ID}"
    networks:
      - main
    depends_on:
      - rabbitmq
      - postgres

  scheduler:
    build: .
    env_file: $PWD/.env
    restart: always
    command: /bin/sh -c "celery -A drf_mtg_card_crawler.celery worker --beat --loglevel=INFO --pidfile= --concurrency=1 -Q dummy-queue-${CELERY_ID}"
    networks:
      - main
    depends_on:
      - rabbitmq
      - postgres

  postgres:
    image: postgres:9.6
    environment:
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    ports:
      - '${POSTGRES_PORT}:5432'
    restart: always
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    networks:
      main:
        aliases:
          - postgres

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      main:
        aliases:
          - rabbitmq

volumes:
    postgres_volume:
    static_volume:

networks:
    main:
